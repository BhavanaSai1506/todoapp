{"version":3,"sources":["modules/entity/entity.umd.js"],"names":["global","factory","exports","module","require","define","amd","npm_package","this","store","DidMutate","__assign$1","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","__read","o","m","Symbol","iterator","r","e","ar","next","done","push","value","error","__spread","concat","createStateOperator","mutator","operation","arg","state","clonedEntityState","ids","entities","didMutate","Both","EntitiesOnly","__values$1","createUnsortedStateAdapter","selectId","addOneMutably","entity","key","None","addManyMutably","e_1","_a","entities_1","entities_1_1","e_1_1","return","removeManyMutably","keys","filter","map","id","updateManyMutably","updates","newKeys","update","takeNewKey","updated","changes","newKey","hasNewKey","upsertManyMutably","added","entities_2","entities_2_1","e_2_1","e_2","didMutateByUpdated","didMutateByAdded","removeAll","addOne","addMany","addAll","addAllMutably","updateOne","updateOneMutably","updateMany","upsertOne","upsertOneMutably","upsertMany","removeOne","removeOneMutably","removeMany","__values","__assign","createEntityAdapter","options","sortComparer","instance","stateFactory","createInitialStateFactory","getInitialState","additionalState","selectorsFactory","createSelectorsFactory","getSelectors","selectState","selectIds","selectEntities","selectAll","createSelector","selectTotal","stateAdapter","createSortedStateAdapter","sort","newModels","models","model","merge","didMutateIds","takeUpdatedModel","originalIds_1","updatedIndexes_1","index","every","j","modelId","entityId","slice","forEach","defineProperty"],"mappings":"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","sourcesContent":["/**\n * @license NgRx v6.0.0-beta.1\n * (c) 2015-2018 Brandon Roberts, Mike Ryan, Rob Wormald, Victor Savkin\n * License: MIT\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@ngrx/store')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', '@ngrx/store'], factory) :\n\t(factory((global.npm_package = {}),global['@ngrx/store']));\n}(this, (function (exports,store) { 'use strict';\n\nfunction getInitialEntityState() {\n    return {\n        ids: [],\n        entities: {},\n    };\n}\nfunction createInitialStateFactory() {\n    function getInitialState(additionalState) {\n        if (additionalState === void 0) { additionalState = {}; }\n        return Object.assign(getInitialEntityState(), additionalState);\n    }\n    return { getInitialState: getInitialState };\n}\n\nfunction createSelectorsFactory() {\n    function getSelectors(selectState) {\n        var selectIds = function (state) { return state.ids; };\n        var selectEntities = function (state) { return state.entities; };\n        var selectAll = store.createSelector(selectIds, selectEntities, function (ids, entities) {\n            return ids.map(function (id) { return entities[id]; });\n        });\n        var selectTotal = store.createSelector(selectIds, function (ids) { return ids.length; });\n        if (!selectState) {\n            return {\n                selectIds: selectIds,\n                selectEntities: selectEntities,\n                selectAll: selectAll,\n                selectTotal: selectTotal,\n            };\n        }\n        return {\n            selectIds: store.createSelector(selectState, selectIds),\n            selectEntities: store.createSelector(selectState, selectEntities),\n            selectAll: store.createSelector(selectState, selectAll),\n            selectTotal: store.createSelector(selectState, selectTotal),\n        };\n    }\n    return { getSelectors: getSelectors };\n}\n\nvar __assign$1 = (undefined && undefined.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nvar __read = (undefined && undefined.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (undefined && undefined.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nvar DidMutate;\n(function (DidMutate) {\n    DidMutate[DidMutate[\"EntitiesOnly\"] = 0] = \"EntitiesOnly\";\n    DidMutate[DidMutate[\"Both\"] = 1] = \"Both\";\n    DidMutate[DidMutate[\"None\"] = 2] = \"None\";\n})(DidMutate || (DidMutate = {}));\nfunction createStateOperator(mutator) {\n    return function operation(arg, state) {\n        var clonedEntityState = {\n            ids: __spread(state.ids),\n            entities: __assign$1({}, state.entities),\n        };\n        var didMutate = mutator(arg, clonedEntityState);\n        if (didMutate === DidMutate.Both) {\n            return Object.assign({}, state, clonedEntityState);\n        }\n        if (didMutate === DidMutate.EntitiesOnly) {\n            return __assign$1({}, state, { entities: clonedEntityState.entities });\n        }\n        return state;\n    };\n}\n\nvar __values$1 = (undefined && undefined.__values) || function (o) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\n    if (m) return m.call(o);\n    return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n};\nfunction createUnsortedStateAdapter(selectId) {\n    function addOneMutably(entity, state) {\n        var key = selectId(entity);\n        if (key in state.entities) {\n            return DidMutate.None;\n        }\n        state.ids.push(key);\n        state.entities[key] = entity;\n        return DidMutate.Both;\n    }\n    function addManyMutably(entities, state) {\n        var didMutate = false;\n        try {\n            for (var entities_1 = __values$1(entities), entities_1_1 = entities_1.next(); !entities_1_1.done; entities_1_1 = entities_1.next()) {\n                var entity = entities_1_1.value;\n                didMutate = addOneMutably(entity, state) !== DidMutate.None || didMutate;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (entities_1_1 && !entities_1_1.done && (_a = entities_1.return)) _a.call(entities_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return didMutate ? DidMutate.Both : DidMutate.None;\n        var e_1, _a;\n    }\n    function addAllMutably(entities, state) {\n        state.ids = [];\n        state.entities = {};\n        addManyMutably(entities, state);\n        return DidMutate.Both;\n    }\n    function removeOneMutably(key, state) {\n        return removeManyMutably([key], state);\n    }\n    function removeManyMutably(keys, state) {\n        var didMutate = keys\n            .filter(function (key) { return key in state.entities; })\n            .map(function (key) { return delete state.entities[key]; }).length > 0;\n        if (didMutate) {\n            state.ids = state.ids.filter(function (id) { return id in state.entities; });\n        }\n        return didMutate ? DidMutate.Both : DidMutate.None;\n    }\n    function removeAll(state) {\n        return Object.assign({}, state, {\n            ids: [],\n            entities: {},\n        });\n    }\n    function takeNewKey(keys, update, state) {\n        var original = state.entities[update.id];\n        var updated = Object.assign({}, original, update.changes);\n        var newKey = selectId(updated);\n        var hasNewKey = newKey !== update.id;\n        if (hasNewKey) {\n            keys[update.id] = newKey;\n            delete state.entities[update.id];\n        }\n        state.entities[newKey] = updated;\n        return hasNewKey;\n    }\n    function updateOneMutably(update, state) {\n        return updateManyMutably([update], state);\n    }\n    function updateManyMutably(updates, state) {\n        var newKeys = {};\n        updates = updates.filter(function (update) { return update.id in state.entities; });\n        var didMutateEntities = updates.length > 0;\n        if (didMutateEntities) {\n            var didMutateIds = updates.filter(function (update) { return takeNewKey(newKeys, update, state); }).length > 0;\n            if (didMutateIds) {\n                state.ids = state.ids.map(function (id) { return newKeys[id] || id; });\n                return DidMutate.Both;\n            }\n            else {\n                return DidMutate.EntitiesOnly;\n            }\n        }\n        return DidMutate.None;\n    }\n    function upsertOneMutably(entity, state) {\n        return upsertManyMutably([entity], state);\n    }\n    function upsertManyMutably(entities, state) {\n        var added = [];\n        var updated = [];\n        try {\n            for (var entities_2 = __values$1(entities), entities_2_1 = entities_2.next(); !entities_2_1.done; entities_2_1 = entities_2.next()) {\n                var entity = entities_2_1.value;\n                var id = selectId(entity);\n                if (id in state.entities) {\n                    updated.push({ id: id, changes: entity });\n                }\n                else {\n                    added.push(entity);\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (entities_2_1 && !entities_2_1.done && (_a = entities_2.return)) _a.call(entities_2);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        var didMutateByUpdated = updateManyMutably(updated, state);\n        var didMutateByAdded = addManyMutably(added, state);\n        switch (true) {\n            case didMutateByAdded === DidMutate.None &&\n                didMutateByUpdated === DidMutate.None:\n                return DidMutate.None;\n            case didMutateByAdded === DidMutate.Both ||\n                didMutateByUpdated === DidMutate.Both:\n                return DidMutate.Both;\n            default:\n                return DidMutate.EntitiesOnly;\n        }\n        var e_2, _a;\n    }\n    return {\n        removeAll: removeAll,\n        addOne: createStateOperator(addOneMutably),\n        addMany: createStateOperator(addManyMutably),\n        addAll: createStateOperator(addAllMutably),\n        updateOne: createStateOperator(updateOneMutably),\n        updateMany: createStateOperator(updateManyMutably),\n        upsertOne: createStateOperator(upsertOneMutably),\n        upsertMany: createStateOperator(upsertManyMutably),\n        removeOne: createStateOperator(removeOneMutably),\n        removeMany: createStateOperator(removeManyMutably),\n    };\n}\n\nvar __values = (undefined && undefined.__values) || function (o) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\n    if (m) return m.call(o);\n    return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n};\nfunction createSortedStateAdapter(selectId, sort) {\n    var _a = createUnsortedStateAdapter(selectId), removeOne = _a.removeOne, removeMany = _a.removeMany, removeAll = _a.removeAll;\n    function addOneMutably(entity, state) {\n        return addManyMutably([entity], state);\n    }\n    function addManyMutably(newModels, state) {\n        var models = newModels.filter(function (model) { return !(selectId(model) in state.entities); });\n        if (models.length === 0) {\n            return DidMutate.None;\n        }\n        else {\n            merge(models, state);\n            return DidMutate.Both;\n        }\n    }\n    function addAllMutably(models, state) {\n        state.entities = {};\n        state.ids = [];\n        addManyMutably(models, state);\n        return DidMutate.Both;\n    }\n    function updateOneMutably(update, state) {\n        return updateManyMutably([update], state);\n    }\n    function takeUpdatedModel(models, update, state) {\n        if (!(update.id in state.entities)) {\n            return false;\n        }\n        var original = state.entities[update.id];\n        var updated = Object.assign({}, original, update.changes);\n        var newKey = selectId(updated);\n        delete state.entities[update.id];\n        models.push(updated);\n        return newKey !== update.id;\n    }\n    function updateManyMutably(updates, state) {\n        var models = [];\n        var didMutateIds = updates.filter(function (update) { return takeUpdatedModel(models, update, state); }).length >\n            0;\n        if (models.length === 0) {\n            return DidMutate.None;\n        }\n        else {\n            var originalIds_1 = state.ids;\n            var updatedIndexes_1 = [];\n            state.ids = state.ids.filter(function (id, index) {\n                if (id in state.entities) {\n                    return true;\n                }\n                else {\n                    updatedIndexes_1.push(index);\n                    return false;\n                }\n            });\n            merge(models, state);\n            if (!didMutateIds &&\n                updatedIndexes_1.every(function (i) { return state.ids[i] === originalIds_1[i]; })) {\n                return DidMutate.EntitiesOnly;\n            }\n            else {\n                return DidMutate.Both;\n            }\n        }\n    }\n    function upsertOneMutably(entity, state) {\n        return upsertManyMutably([entity], state);\n    }\n    function upsertManyMutably(entities, state) {\n        var added = [];\n        var updated = [];\n        try {\n            for (var entities_1 = __values(entities), entities_1_1 = entities_1.next(); !entities_1_1.done; entities_1_1 = entities_1.next()) {\n                var entity = entities_1_1.value;\n                var id = selectId(entity);\n                if (id in state.entities) {\n                    updated.push({ id: id, changes: entity });\n                }\n                else {\n                    added.push(entity);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (entities_1_1 && !entities_1_1.done && (_a = entities_1.return)) _a.call(entities_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        var didMutateByUpdated = updateManyMutably(updated, state);\n        var didMutateByAdded = addManyMutably(added, state);\n        switch (true) {\n            case didMutateByAdded === DidMutate.None &&\n                didMutateByUpdated === DidMutate.None:\n                return DidMutate.None;\n            case didMutateByAdded === DidMutate.Both ||\n                didMutateByUpdated === DidMutate.Both:\n                return DidMutate.Both;\n            default:\n                return DidMutate.EntitiesOnly;\n        }\n        var e_1, _a;\n    }\n    function merge(models, state) {\n        models.sort(sort);\n        var ids = [];\n        var i = 0;\n        var j = 0;\n        while (i < models.length && j < state.ids.length) {\n            var model = models[i];\n            var modelId = selectId(model);\n            var entityId = state.ids[j];\n            var entity = state.entities[entityId];\n            if (sort(model, entity) <= 0) {\n                ids.push(modelId);\n                i++;\n            }\n            else {\n                ids.push(entityId);\n                j++;\n            }\n        }\n        if (i < models.length) {\n            state.ids = ids.concat(models.slice(i).map(selectId));\n        }\n        else {\n            state.ids = ids.concat(state.ids.slice(j));\n        }\n        models.forEach(function (model, i) {\n            state.entities[selectId(model)] = model;\n        });\n    }\n    return {\n        removeOne: removeOne,\n        removeMany: removeMany,\n        removeAll: removeAll,\n        addOne: createStateOperator(addOneMutably),\n        updateOne: createStateOperator(updateOneMutably),\n        upsertOne: createStateOperator(upsertOneMutably),\n        addAll: createStateOperator(addAllMutably),\n        addMany: createStateOperator(addManyMutably),\n        updateMany: createStateOperator(updateManyMutably),\n        upsertMany: createStateOperator(upsertManyMutably),\n    };\n}\n\nvar __assign = (undefined && undefined.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nfunction createEntityAdapter(options) {\n    if (options === void 0) { options = {}; }\n    var _a = __assign({ sortComparer: false, selectId: function (instance) { return instance.id; } }, options), selectId = _a.selectId, sortComparer = _a.sortComparer;\n    var stateFactory = createInitialStateFactory();\n    var selectorsFactory = createSelectorsFactory();\n    var stateAdapter = sortComparer\n        ? createSortedStateAdapter(selectId, sortComparer)\n        : createUnsortedStateAdapter(selectId);\n    return __assign({ selectId: selectId,\n        sortComparer: sortComparer }, stateFactory, selectorsFactory, stateAdapter);\n}\n\n/**\n * DO NOT EDIT\n *\n * This file is automatically generated at build\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexports.createEntityAdapter = createEntityAdapter;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=entity.umd.js.map\n"]}